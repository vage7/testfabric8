<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.fantasybet</groupId>
    <artifactId>fantasybet</artifactId>
    <version>1.x-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>fantasybet</name>
    <ciManagement>
        <system>hudson</system>
        <url>http://build.keevosh.gr:8080/job/fantasybet/</url>
    </ciManagement>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.4.0.Release</version>
    </parent>

    <profiles>
        <profile>
            <id>dev</id>
            <modules>
            	<module>fantasybet-db</module>
                <module>fantasybet-test-commons</module>
                <module>fantasybet-domain</module>
                <module>fantasybet-domain-bet</module>
                <module>fantasybet-domain-b4tb</module>
                <module>fantasybet-domain-payment</module>
                <module>fantasybet-services</module>
                <module>fantasybet-services-wallet</module>
                <module>fantasybet-services-wallet-b4tb</module>
				<module>fantasybet-services-wallet-vermantia</module>
                <module>fantasybet-services-bet</module>
                <module>fantasybet-services-payment</module>
                <module>fantasybet-services-payment-transactium</module>
                <module>fantasybet-services-payment-paysafe</module>
				<module>fantasybet-services-payment-skrill</module>
                <module>fantasybet-services-parser-opta</module>
                <module>fantasybet-web</module>
                <module>fantasybet-integration</module>
                <module>fantasybet-conf</module>
                <module>fantasybet-backoffice</module>
            </modules>
            <properties>
                <maven.test.skip>true</maven.test.skip>
                <spring.profiles.active>dev</spring.profiles.active>
                <skip.findbugs>true</skip.findbugs>
                <test.database>mysql</test.database>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <modules>
                <module>fantasybet-test-commons</module>
                <module>fantasybet-domain</module>
                <module>fantasybet-domain-bet</module>
                <module>fantasybet-domain-b4tb</module>
                <module>fantasybet-domain-payment</module>
                <module>fantasybet-services</module>
                <module>fantasybet-services-wallet</module>
                <module>fantasybet-services-wallet-b4tb</module>
				<module>fantasybet-services-wallet-vermantia</module>
				<module>fantasybet-services-bet</module>
				<module>fantasybet-services-payment</module>
				<module>fantasybet-services-payment-transactium</module>
				<module>fantasybet-services-payment-paysafe</module>
				<module>fantasybet-services-payment-skrill</module>
				<module>fantasybet-services-parser-opta</module>
				<module>fantasybet-web</module>
				<module>fantasybet-integration</module>
                <module>fantasybet-conf</module>
                <module>fantasybet-backoffice</module>
            </modules>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>test</spring.profiles.active>
                <test.excluded.groups>java.lang.String</test.excluded.groups>
                <skip.findbugs>true</skip.findbugs>
                <test.database>hsql</test.database>
            </properties>
        </profile>
        <profile>
            <id>integration</id>
            <modules>
                <module>fantasybet-db</module>
                <module>fantasybet-test-commons</module>
                <module>fantasybet-domain</module>
                <module>fantasybet-domain-bet</module>
                <module>fantasybet-domain-b4tb</module>
                <module>fantasybet-domain-payment</module>
                <module>fantasybet-services</module>
                <module>fantasybet-services-wallet</module>
                <module>fantasybet-services-wallet-b4tb</module>
                <module>fantasybet-services-wallet-vermantia</module>
                <module>fantasybet-services-bet</module>
                <module>fantasybet-services-payment</module>
                <module>fantasybet-services-payment-transactium</module>
                <module>fantasybet-services-payment-paysafe</module>
                <module>fantasybet-services-payment-skrill</module>
                <module>fantasybet-services-parser-opta</module>
                <module>fantasybet-web</module>
                <module>fantasybet-integration</module>
                <module>fantasybet-conf</module>
                <module>fantasybet-backoffice</module>
            </modules>
            <properties>
                <spring.profiles.active>int</spring.profiles.active>
                <test.excluded.groups>java.lang.String</test.excluded.groups>
                <skip.findbugs>false</skip.findbugs>
                <test.database>mysql</test.database>
            </properties>
        </profile>
        <profile>
            <id>mysql:init</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <modules>
                <module>fantasybet-db</module>
                <module>fantasybet-test-commons</module>
                <module>fantasybet-domain</module>
                <module>fantasybet-domain-bet</module>
                <module>fantasybet-domain-payment</module>
                <module>fantasybet-services</module>
                <module>fantasybet-services-bet</module>
                <module>fantasybet-services-payment</module>
                <module>fantasybet-services-payment-transactium</module>
                <module>fantasybet-services-payment-paysafe</module>
                <module>fantasybet-services-parser-opta</module>
                <module>fantasybet-web</module>
                <module>fantasybet-integration</module>
                <module>fantasybet-conf</module>
                <module>fantasybet-backoffice</module>
            </modules>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
                <test.excluded.groups>com.b4tb.misc.test.InMemoryServiceTest</test.excluded.groups>
                <skip.findbugs>true</skip.findbugs>
                <test.database>mysql</test.database>
            </properties>
        </profile>
    </profiles>

    <properties>
<!--         <properties.dir>${project.basedir}/../properties</properties.dir> -->
        <!-- libraries -->
        <java.compiler.version>1.8</java.compiler.version>
        <javaee.jsr250.api.version>1.0</javaee.jsr250.api.version>
        <javaee.jstl.version>1.2</javaee.jstl.version>
        <javaee.mail.version>1.4.7</javaee.mail.version>
        <spring-data-jpa.version>1.11.0.M1</spring-data-jpa.version> 
        <jasypt.version>1.9.0</jasypt.version>
<!--         <hibernate.version>5.2.2.Final</hibernate.version>  -->
        <jadira.usertype.core.version>5.0.0.GA</jadira.usertype.core.version>
        <jadira.usertype.spi.version>5.0.0.GA</jadira.usertype.spi.version>
<!--     	<hibernate.version>4.3.11.Final</hibernate.version> -->
<!--         <hibernate-validator.version>4.3.1.Final</hibernate-validator.version> -->
        <cglib.version>3.1</cglib.version>
        <eaio-uuid.version>3.4</eaio-uuid.version>
        <mysql-connector.version>5.1.31</mysql-connector.version>
        <hsqldb.version>2.2.9</hsqldb.version>
        <jedis.version>2.5.1</jedis.version>
        <junit.version>4.11</junit.version>
        <slf4j.version>1.7.21</slf4j.version>
        <logback.version>1.1.2</logback.version>
        <dbunit.version>2.4.9-custom</dbunit.version>
        <spring-dbunit.version>1.1.12</spring-dbunit.version>
        <easymock.version>3.2</easymock.version>
        <cucumber.version>1.0.14</cucumber.version>
        <powermock.version>1.5.1</powermock.version>
        <smock.version>0.7</smock.version>
        <joda.joda-time.version>2.3</joda.joda-time.version>
        <joda.joda-money.version>0.9.1</joda.joda-money.version>
        <xstream.version>1.4.8</xstream.version>
        <apache.commons-lang.version>2.6</apache.commons-lang.version>
        <apache.commons-fileupload.version>1.2.2</apache.commons-fileupload.version>
        <apache.commons-io.version>2.4</apache.commons-io.version>
        <apache.commons-validator.version>1.4.0</apache.commons-validator.version>
        <apache.commons-codec.version>1.9</apache.commons-codec.version>
        <apache.commons-collections.version>3.2.1</apache.commons-collections.version>
        <apache.commons-pool2.vesrion>2.2</apache.commons-pool2.vesrion>
        <apache.commons-cli.version>1.3.1</apache.commons-cli.version>
        <apache.commons-csv.version>1.4</apache.commons-csv.version>
        <!-- <apache.cxf-rt-core.version>2.7.8</apache.cxf-rt-core.version> -->
        <apache.cxf-rt-frontend-simple.version>3.1.2</apache.cxf-rt-frontend-simple.version>
        <apache.cxf-rt-frontend-jaxws.version>3.1.2</apache.cxf-rt-frontend-jaxws.version>
        <net.sf.uadetector.version>2013.02</net.sf.uadetector.version>
        <google.guava.version>17.0</google.guava.version>
        <aspectjweaver.version>1.7.2.RELEASE</aspectjweaver.version>
        <tuckey.urlrewritefilter.version>4.0.4</tuckey.urlrewritefilter.version>
        <brickred.socialauth.version>2.2.1-custom</brickred.socialauth.version>
        <brickred.socialauth-spring.version>2.0-beta2</brickred.socialauth-spring.version>
        <spring.test.mvc.htmlunit.version>1.0.0.M1</spring.test.mvc.htmlunit.version>
        <hamcrest.version>1.3</hamcrest.version>

        <!-- plugins -->
        <maven.javadoc.plugin.version>2.9</maven.javadoc.plugin.version>
        <maven.dependency.plugin.version>2.7</maven.dependency.plugin.version>
        <maven.source.plugin.version>2.2</maven.source.plugin.version>
        <maven.compiler.plugin.version>2.5.1</maven.compiler.plugin.version>
        <maven.jar.plugin.version>2.4</maven.jar.plugin.version>
        <maven.war.plugin.version>2.3</maven.war.plugin.version>
        <maven.antrun.plugin.version>1.1</maven.antrun.plugin.version>
        <maven.surefire.plugin.version>2.16</maven.surefire.plugin.version>
        <maven.failsafe.plugin.version>2.16</maven.failsafe.plugin.version>
        <maven.liquibase.plugin.version>2.0.5</maven.liquibase.plugin.version>
        <maven.jacoco.plugin.version>0.7.5.201505241946</maven.jacoco.plugin.version>
        <maven.checkstyle.plugin.version>2.10</maven.checkstyle.plugin.version>
        <maven.findbugs.plugin.version>2.5.2</maven.findbugs.plugin.version>
        <apache.cxf.plugin.version>2.7.7</apache.cxf.plugin.version>
        <maven.git-commit-id.plugin.version>2.1.10</maven.git-commit-id.plugin.version>

        <!-- Jacoco Properties -->
        <jacoco.it.execution.data.file>${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco.it.execution.data.file>
        <jacoco.ut.execution.data.file>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.execution.data.file>

        <!-- other properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    </properties>

    <repositories>
        <repository>
            <id>springsource-repo</id>
            <name>SpringSource Repository</name>
            <url>http://repo.springsource.org/release</url>
        </repository>
        <repository>
            <id>springsource-snapshot-repo</id>
            <name>SpringSource Snapshot Repository</name>
            <url>http://repo.springsource.org/snapshot</url>
        </repository>
        <repository>
            <id>spring-snapshot</id>
            <url>https://repo.spring.io/libs-milestone</url>
        </repository>
        <repository>
            <id>jboss-repo</id>
            <name>JBoss Repository</name>
            <url>http://repository.jboss.org/nexus/content/groups/public/</url>
        </repository>
        <repository>
            <id>Octopussy OpenIMAJ maven repository Releases</id>
            <url>http://octopussy.ecs.soton.ac.uk/m2/releases</url>
        </repository>
        <repository>
            <id>Octopussy OpenIMAJ maven repository Snapshots</id>
            <url>http://octopussy.ecs.soton.ac.uk/m2/snapshots</url>
        </repository>
        <repository>
            <id>Excilys Repo</id>
            <url>http://repository.excilys.com/content/repositories/releases</url>
        </repository>
        <repository>
            <id>eaio.com</id>
            <url>http://eaio.com/maven2</url>
        </repository>
		<repository>
			<id>codehaus-mule-repo</id>
			<name>codehaus-mule-repo</name>
			<url>https://repository-master.mulesoft.org/nexus/content/groups/public/</url>
			<layout>default</layout>
		</repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <!-- TEST DEPENDENCIES -->
            <!-- JUnit -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test-mvc-htmlunit</artifactId>
                <version>${spring.test.mvc.htmlunit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- EasyMock // TODO : remove easyMock, use mockito. -->
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymockclassextension</artifactId>
                <version>${easymock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>${easymock.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-java</artifactId>
                <version>${cucumber.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-junit</artifactId>
                <version>${cucumber.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-spring</artifactId>
                <version>${cucumber.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- DBUnit -->
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>${dbunit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.excilys.ebi.spring-dbunit</groupId>
                <artifactId>spring-dbunit-test</artifactId>
                <version>${spring-dbunit.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.dbunit</groupId>
                        <artifactId>dbunit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- smock -->
            <dependency>
                <groupId>net.javacrumbs</groupId>
                <artifactId>smock-http-client</artifactId>
                <version>${smock.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- TEST DEPENDENCIES -->

            <!-- J2EE -->
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-web-api</artifactId>
                <version>${javaee.web.api.version}</version>
                <scope>provided</scope>
            </dependency>
    		<dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${javaee.servlet.api.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>jsr250-api</artifactId>
                <version>${javaee.jsr250.api.version}</version>
                <type>jar</type>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>${javaee.jstl.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mail</artifactId>
                <version>${javaee.mail.version}</version>
            </dependency>

            <!-- Groovy -->
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>${groovy.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- Logging SLF4J -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- Spring Framework -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${spring.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Spring Security Framework -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-bom</artifactId>
                <version>${spring-security.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Jasypt -->
            <dependency>
                <groupId>org.jasypt</groupId>
                <artifactId>jasypt-spring31</artifactId>
                <version>${jasypt.version}</version>
            </dependency>

            <!-- Hibernate JPA2 -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <!-- UUID -->
            <dependency>
                <groupId>com.eaio.uuid</groupId>
                <artifactId>uuid</artifactId>
                <version>${eaio-uuid.version}</version>
            </dependency>
            <!-- MySQL -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector.version}</version>
                <scope>compile</scope>
            </dependency>
            <!-- HSQL -->
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${hsqldb.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Jedis -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>

            <!-- CGLIB -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
                <type>jar</type>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>${cglib.version}</version>
                <type>jar</type>
                <scope>compile</scope>
            </dependency>

            <!-- JSON/XML libs -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-afterburner</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>${xstream.version}</version>
            </dependency>
            <!-- Apache Commons -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${apache.commons-lang.version}</version>
                <type>jar</type>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${apache.commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${apache.commons-io.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${apache.commons-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${apache.commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${apache.commons-collections.version}</version>
     		</dependency>
			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>${apache.commons-cli.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-csv</artifactId>
				<version>${apache.commons-csv.version}</version>
			</dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>2.4.5</version>
                <scope>compile</scope>
            </dependency>
            <!-- Apache tomcat -->
            <dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-jetty</artifactId>
				<version>${apache.cxf-rt-frontend-simple.version}</version>
			</dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-simple</artifactId>
                <version>${apache.cxf-rt-frontend-simple.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxws</artifactId>
                <version>${apache.cxf-rt-frontend-jaxws.version}</version>
            </dependency>

            <!-- User-Agent Detector libs -->
            <dependency>
                <groupId>net.sf.uadetector</groupId>
                <artifactId>uadetector-resources</artifactId>
                <version>${net.sf.uadetector.version}</version>
            </dependency>

            <!-- Google Dependencies -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google.guava.version}</version>
            </dependency>
            <!-- Joda Time, Money -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>org.joda</groupId>
                <artifactId>joda-money</artifactId>
                <version>${joda.joda-money.version}</version>
            </dependency>
            <!-- Jadira usertypes -->
            <dependency>
                <groupId>org.jadira.usertype</groupId>
                <artifactId>usertype.core</artifactId>
                <version>${jadira.usertype.core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jadira.usertype</groupId>
                <artifactId>usertype.spi</artifactId>
                <version>${jadira.usertype.spi.version}</version>
            </dependency>

            <!-- aspectj -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectjweaver.version}</version>
            </dependency>

            <!-- urlrewritefilter -->
            <dependency>
                <groupId>org.tuckey</groupId>
                <artifactId>urlrewritefilter</artifactId>
                <version>${tuckey.urlrewritefilter.version}</version>
            </dependency>

            <dependency>
                <groupId>org.brickred</groupId>
                <artifactId>socialauth</artifactId>
                <version>${brickred.socialauth.version}</version>
            </dependency>
            <dependency>
                <groupId>org.brickred</groupId>
                <artifactId>socialauth-spring</artifactId>
                <version>${brickred.socialauth-spring.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>0.8.1</version>
                <scope>test</scope>
            </dependency>

            <dependency>
				<groupId>org.javatuples</groupId>
				<artifactId>javatuples</artifactId>
				<version>1.2</version>
			</dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>2.4.0</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>2.4.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.artifactId}</finalName>
        <pluginManagement>
            <plugins>
                <!-- ant -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven.antrun.plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>validate</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <tasks>
                                    <echo>Run liquibase update tasks--------------------------------</echo>
                                </tasks>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- liquibase -->
                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>${maven.liquibase.plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>process-resources</phase>
                            <configuration>
                                <clearCheckSums>true</clearCheckSums>
                                <propertyFile>src/test/resources/liquibase.properties</propertyFile>
                            </configuration>
                            <goals>
                                <goal>status</goal>
                                <goal>update</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- javadoc -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven.javadoc.plugin.version}</version>
                </plugin>

                <!-- copy depedencies -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <fork>true</fork>
                        <meminitial>128m</meminitial>
                        <maxmem>512m</maxmem>
                        <source>${java.compiler.version}</source>
                        <target>${java.compiler.version}</target>
                        <compilerArgument>-Xlint:all</compilerArgument>
                        <showWarnings>true</showWarnings>
                        <showDeprecation>true</showDeprecation>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                    <configuration>
                        <includes>
                            <include>**/*</include>
                        </includes>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-junit47</artifactId>
                            <version>${maven.surefire.plugin.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <!-- Sets the VM argument line used when integration tests are run. -->
                        <argLine>${surefireArgLine}</argLine>
                        <runOrder>alphabetical</runOrder>
                        <systemPropertyVariables>
                            <spring.profiles.active>${spring.profiles.active}</spring.profiles.active>
                            <test.database>${test.database}</test.database>
                            <properties.dir>${properties.dir}</properties.dir>
                        </systemPropertyVariables>
                        <excludedGroups>${test.excluded.groups}</excludedGroups>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven.failsafe.plugin.version}</version>
                    <executions>
                        <!--
                        Ensures that both integration-test and verify goals of the Failsafe Maven
                        plugin are executed.
                        -->
                        <execution>
                            <id>integration-tests</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the VM argument line used when integration tests are run. -->
                                <argLine>${failsafeArgLine}</argLine>

                                <!--
                                Skips integration tests if the value of skip.integration.tests property
                                is true
                                -->
                                <skipTests>${maven.test.skip}</skipTests>
                                <systemPropertyVariables>
                                    <spring.profiles.active>${spring.profiles.active}</spring.profiles.active>
                                    <test.database>${test.database}</test.database>
                                    <properties.dir>${properties.dir}</properties.dir>
                                </systemPropertyVariables>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- jacoco -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${maven.jacoco.plugin.version}</version>
                </plugin>

                <!-- findbugs -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${maven.findbugs.plugin.version}</version>
                </plugin>

                <!-- Apache cxf -->
                <plugin>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-codegen-plugin</artifactId>
                    <version>${apache.cxf.plugin.version}</version>
                </plugin>

                <!-- git-commit-id plugin -->
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>${maven.git-commit-id.plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>

                    <configuration>
                        <prefix>git</prefix>
                        <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
                        <verbose>false</verbose>
                        <useNativeGit>false</useNativeGit>
                        <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>

                        <skipPoms>true</skipPoms>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>
                        <failOnNoGitDirectory>true</failOnNoGitDirectory>
                        <abbrevLength>7</abbrevLength>
                        <skip>false</skip>

                        <excludeProperties>
                            <!-- <excludeProperty>git.user.*</excludeProperty> -->
                        </excludeProperties>

                        <gitDescribe>
                            <skip>false</skip>
                            <always>false</always>
                            <abbrev>7</abbrev>
                            <dirty>-dev</dirty>
                            <tags>true</tags>
                            <forceLongFormat>false</forceLongFormat>
                        </gitDescribe>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <meminitial>128m</meminitial>
                    <maxmem>512m</maxmem>
                    <source>${java.compiler.version}</source>
                    <target>${java.compiler.version}</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <configuration>
                    <onlyAnalyze>com.b4tb.-</onlyAnalyze>
                    <skip>${skip.findbugs}</skip>
                    <fork>true</fork>
                </configuration>
                <executions>
                    <execution>
                        <id>findbugs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Jacoco -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <!--
                    Prepares the property pointing to the JaCoCo runtime agent which
                    is passed as VM argument when Maven the Surefire plugin is executed.
                    -->
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${jacoco.ut.execution.data.file}</destFile>
                            <!--
                            Sets the name of the property containing the settings
                            for JaCoCo runtime agent.
                            -->
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!--
                    Ensures that the code coverage report for unit tests is created after
                    unit tests have been run.
                    -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${jacoco.ut.execution.data.file}</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                    <!--
                    Prepares the property pointing to the JaCoCo runtime agent which
                    is passed as VM argument when Maven the Failsafe plugin is executed.
                    -->
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${jacoco.it.execution.data.file}</destFile>
                            <!--
                            Sets the name of the property containing the settings
                            for JaCoCo runtime agent.
                            -->
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!--
                    Ensures that the code coverage report for integration tests after
                    integration tests have been run.
                    -->
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${jacoco.it.execution.data.file}</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.plugin.version}</version>
                <configuration>
                    <configLocation>config/sun_checks.xml</configLocation>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

</project>
